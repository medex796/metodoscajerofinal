/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Random;
import javax.swing.JOptionPane;
/**
 * Clase para crear una nueva cuenta en el sistema.
 * Esta clase contiene métodos para manejar la creación de cuentas.
 * interfaces crearcuentaingles y crearcuentaquechua seria lo mismo que aca
 * @author Jhonny
 */
public class CrearCuenta extends javax.swing.JFrame {
//variables de instancia
    public String usuario = "null";
     public int numerCuenta = 000;
     public boolean ahorro = false;
           public boolean credito = false;
          
           public boolean debito = false;
     Principal principal = new Principal();
     
    /**
     * Constructor que inicializa la interfaz de usuario para crear una cuenta.
     * 
     * @param name El nombre de usuario para el cual se está creando la cuenta.
     */
      public CrearCuenta(String name){
          
          initComponents();
        
        this.usuario=name;
        cargar();// Carga los datos de la cuenta  si es que hay datos
        
    
    }   
      /**
     * este constructor vacío para la creación de la interfaz de usuario.
     */
    public CrearCuenta() {
        initComponents();
        setLocationRelativeTo(null);//centra la ventana de la interfaz
    }
    /**
     * Método para cargar los datos de la cuenta desde un archivo.
     */
    public void cargar (){
       
       FileInputStream archivo = null; // variable para leer datos de un arcchivo txt 
        ObjectInputStream convertidorarchivo = null;// variable que permitira en este caso sacar datos del archivo txt 

        try {
            archivo = new FileInputStream("C://Metodos//Cajero.txt");//llama al constructor que permite leer el archivo donde le pasamos la unbicacion del archivo 
            convertidorarchivo = new ObjectInputStream(archivo);// llamamos al constructor que permitira sacar datos del archivo donde le pasamos el archivo de donde queremos sacar los datos
               
                principal= (Principal)convertidorarchivo.readObject(); //agregamos ala lista el objeto que sacamos del archivo txt 
             
        }catch (IOException ex){// excepcion que nos ayuda si no encuentra el archivo 
          
            File archivos = new File ("C://Metodos//Cajero.txt"); // SI NO ENCUENTRA EL ARCHIVO SE CREARA UN NUEVO ARCHIVO 
        }catch (ClassNotFoundException cnfe)//ndica que Java no puede encontrar una clase específica en tiempo de ejecución, lo que generalmente ocurre debido a problemas como errores en el nombre de la clase
                {
                    cnfe.printStackTrace();
                }
       
       
       
       }

       /**
     * Método para actualizar la lista de cuentas en el archivo de almacenamiento.
     */

 private void actualizarLista() {
        try {
           
            FileOutputStream ficherosalida =new FileOutputStream ("C://Metodos//Cajero.txt") ; 
            ObjectOutputStream  convertidor = new ObjectOutputStream (ficherosalida);
            
                convertidor.writeObject(principal);
            
            convertidor.close();
            ficherosalida.close();
        }catch (IOException ex){
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        checkAhorro = new javax.swing.JCheckBox();
        checkBolivianos = new javax.swing.JCheckBox();
        checkDolares = new javax.swing.JCheckBox();
        checkCredito = new javax.swing.JCheckBox();
        checkDebito = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(51, 0, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SELECCIONE EL TIPO DE MONEDA");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 330, 30));

        checkAhorro.setBackground(new java.awt.Color(0, 51, 51));
        checkAhorro.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkAhorro.setForeground(new java.awt.Color(255, 255, 255));
        checkAhorro.setText("AHORROS");
        checkAhorro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAhorroActionPerformed(evt);
            }
        });
        jPanel1.add(checkAhorro, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, -1));

        checkBolivianos.setBackground(new java.awt.Color(0, 51, 51));
        checkBolivianos.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkBolivianos.setForeground(new java.awt.Color(255, 255, 255));
        checkBolivianos.setText("BOLIVIANOS");
        checkBolivianos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBolivianosActionPerformed(evt);
            }
        });
        jPanel1.add(checkBolivianos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        checkDolares.setBackground(new java.awt.Color(0, 51, 51));
        checkDolares.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkDolares.setForeground(new java.awt.Color(255, 255, 255));
        checkDolares.setText("DOLARES");
        checkDolares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDolaresActionPerformed(evt);
            }
        });
        jPanel1.add(checkDolares, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, -1, -1));

        checkCredito.setBackground(new java.awt.Color(0, 51, 51));
        checkCredito.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkCredito.setForeground(new java.awt.Color(255, 255, 255));
        checkCredito.setText("CREDITO");
        checkCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkCreditoActionPerformed(evt);
            }
        });
        jPanel1.add(checkCredito, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 230, -1, -1));

        checkDebito.setBackground(new java.awt.Color(0, 51, 51));
        checkDebito.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        checkDebito.setForeground(new java.awt.Color(255, 255, 255));
        checkDebito.setText("DEBITO");
        checkDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkDebitoActionPerformed(evt);
            }
        });
        jPanel1.add(checkDebito, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, -1, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("SELECCIONE ELTIPO DE CUENTA");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 320, 30));

        jLabel5.setBackground(new java.awt.Color(0, 102, 102));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DATOS CUENTA");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 290, 50));

        jButton5.setBackground(new java.awt.Color(0, 51, 51));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("CREAR CUENTA");
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 410, 140, -1));

        jButton6.setBackground(new java.awt.Color(0, 51, 51));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("SALIR");
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 410, 90, -1));

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REGRESAR");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 90, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pngwing.com (4).png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-230, 0, -1, 460));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/f3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkAhorroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAhorroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkAhorroActionPerformed

    private void checkBolivianosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBolivianosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkBolivianosActionPerformed

    private void checkDolaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDolaresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkDolaresActionPerformed

    private void checkCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkCreditoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkCreditoActionPerformed

    private void checkDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkDebitoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkDebitoActionPerformed
/**
     * Método que se ejecuta cuando se hace clic en el botón para crear una cuenta.
     * Genera un número de cuenta aleatorio y verifica si ya existe en el sistema.
     * Luego, según las selecciones del usuario, crea una nueva cuenta del tipo correspondiente.
     * 
     * @param evt El evento de acción que desencadena este método (clic en el botón).
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Random random = new Random();
        this.numerCuenta=random.nextInt (200000000-100000000+1)+100000000;
        boolean bandera = true ;
        while (bandera){
            if (!existe(numerCuenta)){
                bandera = false;
            }
            this.numerCuenta=random.nextInt (200000000-100000000+1)+100000000;

        }

        if (!checkAhorro.isSelected()&&!checkCredito.isSelected()&&!checkDebito.isSelected()){
            JOptionPane.showMessageDialog(null, "Seleccione el tipo de cuenta porfavor ", "Error", JOptionPane.INFORMATION_MESSAGE);

        }else if(checkAhorro.isSelected()&&!checkCredito.isSelected()&&!checkDebito.isSelected()){
            ahorro = true;
            credito = false;
            debito = false;
            siguientepaso("Ahorro");

        }else if(!checkAhorro.isSelected()&&checkCredito.isSelected()&&!checkDebito.isSelected()){
            ahorro = false;
            credito = true;
            debito = false;
            siguientepaso("Credito");

        }else if (!checkAhorro.isSelected()&&!checkCredito.isSelected()&&checkDebito.isSelected()){
            ahorro = false;
            credito = false;
            debito = true;
            siguientepaso("debito");

        }else {
            JOptionPane.showMessageDialog(null, "Seleccione solo un tipo de cuenta porfavor ", "Error", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_jButton5ActionPerformed
/**
     * Método que se ejecuta cuando se hace clic en el botón para salir.
     * Crea una nueva instancia de la ventana de bienvenida y la muestra.
     * 
     * @param evt El evento de acción que desencadena este método (clic en el botón).
     */
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Bienvenida bienvenida = new Bienvenida();
        bienvenida.setVisible(true);
        bienvenida.setLocationRelativeTo(null);
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
/**
     * Método que se ejecuta cuando se hace clic en el botón para regresar.
     * Crea una nueva instancia de la ventana de cuentas y la muestra.
     * 
     * @param evt El evento de acción que desencadena este método (clic en el botón).
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Cuentas ventana = new Cuentas (usuario);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Método para realizar la siguiente etapa después de que se haya seleccionado el tipo de cuenta.
     * Crea una nueva cuenta con el tipo y la moneda seleccionados y la agrega a la lista de cuentas.
     * Luego muestra un mensaje con el número de cuenta generado.
     * 
     * @param tipoCuenta El tipo de cuenta seleccionado por el usuario.
     */
    public void siguientepaso(String tipoCuenta){
       boolean bolivianos = false;
               boolean dolares = false;
               boolean moneda = false;
               if (!checkBolivianos.isSelected()&&!checkDolares.isSelected()){
                   JOptionPane.showMessageDialog(null, "Seleccione que tipo de moneda guardara su cuenta  ", "Error", JOptionPane.INFORMATION_MESSAGE);
               }else{
                   
                    if(checkBolivianos.isSelected()&&!checkDolares.isSelected()){
                        
                        bolivianos = true;
                         dolares = false;
                         if (ahorro&&!credito&&!debito||!ahorro&&credito&&!debito||!ahorro&&!credito&&debito){
                   if(bolivianos&&!dolares||!bolivianos&&dolares){
                        Cuenta cuenta = new Cuenta (numerCuenta,"Bolivianos",0,tipoCuenta,usuario);
                        principal.getListaCuenta().add(cuenta);
                        JOptionPane.showMessageDialog(null, "La cuenta ha sido creada exitosamente - Su número de cuenta es: " + numerCuenta, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        actualizarLista();
                        Menu ventana = new Menu(usuario,numerCuenta);
                        ventana.setVisible(true);
                             ventana.setLocationRelativeTo(null);
                             dispose();
                   }
               }
                    
                    }else if(!checkBolivianos.isSelected()&&checkDolares.isSelected()){
                        
                        bolivianos = false;
                         dolares = true;
                         if (ahorro&&!credito&&!debito||!ahorro&&credito&&!debito||!ahorro&&!credito&&debito){
                   if(bolivianos&&!dolares||!bolivianos&&dolares){
                        Cuenta cuenta = new Cuenta (numerCuenta,"Dolares",0,tipoCuenta,usuario);
                        principal.getListaCuenta().add(cuenta);
                        JOptionPane.showMessageDialog(null, "La cuenta ha sido creada exitosamente /n Su número de cuenta es: " + numerCuenta, "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        actualizarLista();
                        Menu ventana = new Menu(usuario,numerCuenta);
                        ventana.setVisible(true);
                             ventana.setLocationRelativeTo(null);
                             dispose();
                   }
               }
               
                    }else {
                        JOptionPane.showMessageDialog(null, "Seleccione solo un tipo de moneda porfavor ", "Error", JOptionPane.INFORMATION_MESSAGE);
                    
                    } 
               
               
                   
               
               }
               
    
    
    
    }
    /**
     * Método para verificar si un número de cuenta ya existe en el sistema.
     * 
     * @param numerocuenta El número de cuenta que se va a verificar.
     * @return true si el número de cuenta ya existe, de lo contrario false.
     */
    public boolean existe (int numerocuenta){
        boolean res = false ;
           for(int i =0; principal.getListaCuenta().size()>i;i++){
                if (principal.getListaCuenta().get(i).getNumeroCuenta() == numerocuenta){
                    res = true ;
                }
    
            }
        return res;
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearCuenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkAhorro;
    private javax.swing.JCheckBox checkBolivianos;
    private javax.swing.JCheckBox checkCredito;
    private javax.swing.JCheckBox checkDebito;
    private javax.swing.JCheckBox checkDolares;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
